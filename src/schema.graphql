# import Vote, VoteSubscriptionPayload, Comment, CommentSubscriptionPayload, Reaction, Category, ReactionSubscriptionPayload from "./generated/prisma.graphql"

type Query{
        info: String!
        votes(songId: Int, userId: ID, myVotes: Boolean): [Vote!]!
        comments(filter: String, songId: Int, commentId: ID, userId: ID): [Comment!]!
        songSearch(searchString: String!): [SongInfo!]!
        lyrics(songId: Int!): Lyrics!
        vote(id: ID): Vote
        myInfo(token: String): User!
        song(id: Int!): SongInfo!
    }

type Mutation{
    vote(isUpvote: Boolean!, startIndex: Int!, endIndex: Int!, songId: Int!, commentId: ID): Vote!
    deleteVote(id: ID!): Vote
    signup(email: String!, password: String!, name: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
    comment(content: String!, startIndex: Int!, endIndex: Int!, songId: Int!, commentId: ID): Comment!
    react(commentId: ID!, categoryType: String!): Reaction
}

type AuthPayload {
    token: String
    user: User
}

type User {
    id: ID!
    name: String!
    email: String!
    votes: [Vote!]!
}

type Subscription {
    newVote: VoteSubscriptionPayload
    newComment: CommentSubscriptionPayload
    newReaction: ReactionSubscriptionPayload
}

type SongInfo {
    title: String!
    artist: String!
    songId: Int!
    imageURI: String!
}

type Lyrics {
    content: String!
}